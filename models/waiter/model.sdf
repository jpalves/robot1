<sdf version='1.7'>
  <model name='bot'>
    	<link name='base_footprint' />
    		
    	<joint name='base_link_joint' type='fixed'>
      		<parent>base_footprint</parent>
      		<child>base_link</child>
      	</joint>
      	
      <link name='base_link'>
    	<inertial>
        	<pose>2e-06 0 3e-06 0 -0 0</pose>
        	<mass>1.20001</mass>
        	<inertia>
          		<ixx>0.00816222</ixx>
          		<ixy>0</ixy>
          		<ixz>-6.99994e-07</ixz>
          		<iyy>0.0201626</iyy>
          		<iyz>0</iyz>
          		<izz>0.0226014</izz>
        	</inertia>
      </inertial>
      <collision name='base_link_fixed_joint_lump__collision_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.4 0.5 0.05</size>
          </box>
        </geometry>
      </collision>
      <collision name='base_link_fixed_joint_lump__custer_wheel_collision_1'>
        <pose>-0.1 0 0 0 -0 0</pose>
        <geometry>
          <sphere>
            <radius>0.05</radius>
          </sphere>
        </geometry>
      </collision>
      <collision name='base_link_fixed_joint_lump__custer_wheel2_collision_2'>
        <pose>0.1 0 0 0 -0 0</pose>
        <geometry>
          <sphere>
            <radius>0.05</radius>
          </sphere>
        </geometry>
      </collision>
      
      <visual name='base_link_fixed_joint_lump__chassis_visual_visual'>
        <pose>-0.205 -0.358 0 1.57 -0 1.57</pose>
        <geometry>
          <mesh>
            <scale>0.001 0.001 0.001</scale>
            <uri>model://waiter/meshes/marses_robot.stl</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__custer_wheel_visual_1'>
        <pose>-0.1 0 0 0 -0 0</pose>
        <geometry>
          <sphere>
            <radius>0.05</radius>
          </sphere>
        </geometry>
      </visual>
      <visual name='base_link_fixed_joint_lump__custer_wheel2_visual_2'>
        <pose>0.1 0 0 0 -0 0</pose>
        <geometry>
          <sphere>
            <radius>0.05</radius>
          </sphere>
        </geometry>
      </visual>
      
      
    </link>
    
    <joint name='lidar_joint' type='fixed'>
      		<pose>0.0 0 0.0 0 -0 0</pose>
      		<parent>base_link</parent>
      		<child>laserscan</child>
    	</joint>
    
    <link name='laserscan'>
        <pose>0.2 0 0.1 0 0 0</pose>
    	<inertial>
    		<inertia>
          		<ixx>0.001</ixx>
          		<ixy>0.000</ixy>
          		<ixz>0.000</ixz>
          		<iyy>0.001</iyy>
          		<iyz>0.000</iyz>
          		<izz>0.001</izz>
        	</inertia>
        	<mass>0.114</mass>
      	</inertial>
      	<visual name='lidar_sensor_visual'>
        	<geometry>
          		<mesh>
            			<scale>1 1 1</scale>
            			<uri>model://waiter/meshes/hokuyo.dae</uri>
          		</mesh>
        	</geometry>
      	</visual>
        <collision name='base_scan_collision'>
        	<geometry>
          		<box>
            			<size>0.1 0.1 0.1</size>
          		</box>
        	</geometry>
      </collision>
      <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.000796</min_angle>
            <max_angle>2.000796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="base_scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
              	<remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
          <base_frame_id>base_link</base_frame_id>
      </plugin>
    </sensor>
    </link>
    
    
    <joint name='left_wheel_hinge' type='revolute'>
      <pose relative_to='base_link'>0 0.2 0 0 -0 0</pose>
      <parent>base_link</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    
    
    <link name='left_wheel'>
      <pose relative_to='left_wheel_hinge'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 1.5707 1.5707</pose>
        <mass>1</mass>
        <inertia>
          <ixx>0.005</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0025</iyy>
          <iyz>0</iyz>
          <izz>0.0025</izz>
        </inertia>
      </inertial>
      <collision name='left_wheel_fixed_joint_lump__collision_collision'>
        <pose>0 0 0 -1.5707 1.5708 0</pose>
        <geometry>
          <cylinder>
            <length>0.05</length>
            <radius>0.05</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='left_wheel_visual_visual'>
        <pose>0 0 0 -1.5707 1.5708 0</pose>
        <geometry>
          <cylinder>
            <length>0.05</length>
            <radius>0.05</radius>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    
    <joint name='right_wheel_hinge' type='revolute'>
      <pose relative_to='base_link'>0 -0.2 0 0 -0 0</pose>
      <parent>base_link</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
      </axis>
    </joint>
    
    <link name='right_wheel'>
      <pose relative_to='right_wheel_hinge'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 0 0 0 1.5707 1.5707</pose>
        <mass>1</mass>
        <inertia>
          <ixx>0.005</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.0025</iyy>
          <iyz>0</iyz>
          <izz>0.0025</izz>
        </inertia>
      </inertial>
      <collision name='right_wheel_fixed_joint_lump__collision_collision'>
        <pose>0 0 0 -1.5707 1.5708 0</pose>
        <geometry>
          <cylinder>
            <length>0.05</length>
            <radius>0.05</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='right_wheel_visual_visual'>
        <pose>0 0 0 -1.5707 1.5708 0</pose>
        <geometry>
          <cylinder>
            <length>0.05</length>
            <radius>0.05</radius>
          </cylinder>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    
    
    
    <static>0</static>
    <plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
      <updateRate>10</updateRate>
      <left_joint>left_wheel_hinge</left_joint>
      <right_joint>right_wheel_hinge</right_joint>
      <wheel_separation>0.4</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      <wheel_acceleration>1.0</wheel_acceleration>
      <wheel_torque>10</wheel_torque>
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>/odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_baseframe>base_link</robot_baseframe>
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>/cmd_vel:=diff_drive/cmd_vel</remapping>
      </ros>
      <publish_odom>1</publish_odom>
      <publish_odom_tf>1</publish_odom_tf>
      <publish_wheel_tf>0</publish_wheel_tf>
    </plugin>
    
  </model>
</sdf>
