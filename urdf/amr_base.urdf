<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from amr_base.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="amr_base">
  <!--<xacro:property name="pi" value="3.1415927" />-->
  <!--************* ROBOT'S FOOTPRINT **************-->
  <link name="base_footprint"/>
  <joint name="base_to_base" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <!--************* ROBOT'S BASE **************-->
  <link name="base_link">
    <visual>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/ROBOTSEMNADA.dae"/>
      </geometry>
      <origin rpy="0 0 1.5708" xyz="0.235 0.025 0.033"/>
      <material name="metal">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 1.5708" xyz="0.235 0.025 0.033"/>
      <geometry>
         <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/ROBOTSEMNADA.dae"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="40.0302"/>
      <inertia ixx="0.7463130412500001" ixy="0" ixz="0" iyy="0.7463130412500001" iyz="0" izz="1.05879879"/>
    </inertial>
  </link>
  <joint name="base_to_torre" type="fixed">
    <origin rpy="0 0 0" xyz="0.23 0 0.15"/>
    <parent link="base_link"/>
    <child link="torre_link"/>
  </joint>
  <link name="torre_link">
    <visual>
      <origin rpy="0 0 1.5708" xyz="0 0 0.285"/>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/torre001.dae"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.285"/>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/torre001.dae"/>
      </geometry>
    </collision>
  </link>
  <link name="lwheel_link">
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_wheel.dae"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0435" radius="0.0825"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10.05"/>
      <inertia ixx="0.01172232" ixy="0.0" ixz="0.0" iyy="0.01172232" iyz="0.0" izz="0.01172232"/>
    </inertial>
  </link>
  <joint name="lwheel_joint" type="revolute">
    <parent link="base_link"/>
    <child link="lwheel_link"/>
    <origin rpy="-1.57 0 0" xyz="0 0.1825 0.0825"/>
    <limit effort="1" lower="0" upper="0" velocity="5.0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="rwheel_link">
    <visual>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_wheel.dae"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0435" radius="0.0825"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10.05"/>
      <inertia ixx="0.01172232" ixy="0.0" ixz="0.0" iyy="0.01172232" iyz="0.0" izz="0.01172232"/>
    </inertial>
  </link>
  <joint name="rwheel_joint" type="revolute">
    <parent link="base_link"/>
    <child link="rwheel_link"/>
    <origin rpy="1.57 0 0" xyz="0 -0.1825 0.0825"/>
    <limit effort="1" lower="0" upper="0" velocity="5.0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <link name="fcaster_link">
    <visual>
      <geometry>
        <sphere radius="0.025"/>
        <!--<mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_caster.dae" />-->
      </geometry>
      <origin rpy="0 0 1.57" xyz="0 0 0"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0025348958333333334" ixy="0" ixz="0" iyy="0.0025348958333333334" iyz="0" izz="0.0034031250000000003"/>
    </inertial>
  </link>
  <joint name="fcaster_joint" type="revolute">
    <parent link="base_link"/>
    <child link="fcaster_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <limit effort="1" lower="0" upper="0" velocity="5.0"/>
  </joint>
  <link name="lcaster_link">
    <visual>
      <geometry>
        <sphere radius="0.025"/>
        <!--<mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_caster.dae" />-->
      </geometry>
      <origin rpy="0 0 1.57" xyz="0 0 0"/>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.025"/>
      <geometry>
        <sphere radius="0.025"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.0025348958333333334" ixy="0" ixz="0" iyy="0.0025348958333333334" iyz="0" izz="0.0034031250000000003"/>
    </inertial>
  </link>
  <joint name="lcaster_joint" type="revolute">
    <parent link="base_link"/>
    <child link="lcaster_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <limit effort="1" lower="0" upper="0" velocity="5.0"/>
  </joint>
  <!--<xacro:caster prefix="rcaster" position="-0.135 -0.105 0" />-->
  <!--************* ROBOT'S LASER **************-->
  <link name="base_scan">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.02"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  <joint name="base_to_scanner" type="fixed">
    <parent link="base_link"/>
    <child link="base_scan"/>
    <origin rpy="0 0 0" xyz="0.165 0 0.24"/>
  </joint>
  <gazebo reference="base_scan">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>120</samples>
            <resolution>0.5</resolution>
            <min_angle>-2.194</min_angle>
            <max_angle> 2.194</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.33</min>
          <max>12.5</max>
          <resolution>0.05</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.001</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="scan">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>base_scan</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="base_scan">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/Black</material>
  </gazebo>
  <!--************* ROBOT'S CAMERA **************-->
  <link name="camera_link">
    <visual>
      <geometry>
        <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/d435.dae"/>
      </geometry>
      <origin rpy="1.57 0 1.57" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin rpy="0 0 0" xyz="0.23 0 0.15"/>
  </joint>
  <joint name="camera_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.00 0.0 0.0"/>
    <!-- <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py} ${r200_cam_rgb_pz}" rpy="0 0 0"/> -->
    <parent link="camera_link"/>
    <child link="camera_rgb_frame"/>
  </joint>
  <link name="camera_rgb_frame"/>
  <joint name="camera_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
    <parent link="camera_rgb_frame"/>
    <child link="camera_rgb_optical_frame"/>
  </joint>
  <link name="camera_rgb_optical_frame"/>
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  
  <link name="camera_depth_frame"></link>

  <link name="camera_depth_optical_frame"></link>
  
  <joint name="camera_depth_joint" type="fixed">
    <parent link="camera_link" />
    <child link="camera_depth_frame" />
    <pose xyz="0 0 0" rpy="0 0 0" />
  </joint>


  <joint name="camera_depth_optical_joint" type="fixed">
    <parent link="camera_depth_frame" />
    <child link="camera_depth_optical_frame" />
    <pose xyz="0 0 0 " rpy="-1.57 0 -1.57" />
  </joint>
  
  <gazebo>
    <plugin filename="amr_diff_drive.so" name="amr_diff_drive">
      <update_rate>30</update_rate>
      <!-- wheels -->
      <left_joint>lwheel_joint</left_joint>
      <right_joint>rwheel_joint</right_joint>
      <!-- kinematics -->
      <wheel_separation>0.365</wheel_separation>
      <wheel_diameter>0.165</wheel_diameter>
      <!-- limits -->
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>
      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->
      <publish_odom_tf>true</publish_odom_tf>
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odometry</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_source>1</odometry_source>
      
    </plugin>
  </gazebo>
</robot>
