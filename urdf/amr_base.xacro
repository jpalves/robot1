<?xml version="1.0"?>
<robot name="amr_base" xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <!--************* CONSTANTS **************-->
    <!-- Define the robot's dimensions -->
    <!--<xacro:property name="robot_radius" value="0.23" />-->
    <xacro:property name="wheel_radius" value="0.0825" />
    <xacro:property name="wheel_width" value="0.0435" />
    <xacro:property name="wheel_base" value="0.365" />
    <xacro:property name="base_height" value="0.255" />
    <!--<xacro:property name="pi" value="3.1415927" />-->
    
    <!-- Define intertia macros  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="1.57 0 1.57" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="1.57 0 0" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}" iyz="0" izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}" />
        </inertial>
    </xacro:macro>
    <!--************* ROBOT'S FOOTPRINT **************-->
    <link name="base_footprint" />
    <joint name="base_to_base" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <!--************* ROBOT'S BASE **************-->
    <link name="base_link">
        <visual>
            <geometry>
                <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/ROBOTSEMNADA.dae" />
            </geometry>
            <origin rpy="0 0 1.5708" xyz="0.235 0.025 0.033" />
            <material name="metal">
                <color rgba="0.8 0.8 0.8 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0.1625" />
            <geometry>
                <cylinder radius="0.23" length="0.255" />
            </geometry>
        </collision>
        <xacro:cylinder_inertia m="40.0302" r="0.23" h="0.255" />
    </link>
    
    <joint name="base_to_torre" type="fixed">
    	<origin xyz="0 0 0.285" rpy="0 0 1.5708" />
    	<parent link="base_link" />
    	<child link="torre_link" />
    </joint>
    
    <link name="torre_link">
    	   <visual>
                <origin xyz="0 0 0.285" rpy="0 0 0" />
                <geometry>
                    <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/torre001.dae" />
                </geometry>
                <material name="black">
                    <color rgba="0 0 0 1" />
                </material>
            </visual>
            
            <collision>
                <origin xyz="0 0 0.285" rpy="0 0 0" />
                <geometry>
                    <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/torre001.dae" />
                </geometry>
            </collision>
    </link>
    <!--************* ROBOT'S WHEELS **************-->
    <xacro:macro name="wheel" params="prefix reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="1.57 0 0" />
                <geometry>
                    <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_wheel.dae" />
                </geometry>
                <material name="black">
                    <color rgba="0 0 0 1" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>
            <xacro:sphere_inertia m="10.05" r="${0.108/2}" />
        </link>
        <joint name="${prefix}_joint" type="revolute">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin xyz="0 ${reflect*(wheel_base/2)} ${wheel_radius}" rpy="${-reflect * 1.57} 0 0" />
            <limit upper="0" lower="0" effort="1" velocity="5.0" />
            <axis xyz="0 0 ${reflect}" />
        </joint>
    </xacro:macro>
    <xacro:wheel prefix="lwheel" reflect="1" />
    <xacro:wheel prefix="rwheel" reflect="-1" />
    <!--************* ROBOT'S CASTERS **************-->
    <xacro:macro name="caster" params="prefix position">
        <link name="${prefix}_link">
            <visual>
                <geometry>
                    <sphere radius="0.025"/>
                    <!--<mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/amr_caster.dae" />-->
                </geometry>
                <origin rpy="0 0 1.57" xyz="0 0 0" />
                <material name="white">
                    <color rgba="1 1 1 1" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0.025" rpy="0 0 0" />
                <geometry>
                    <sphere radius="0.025" />
                </geometry>
            </collision>
            <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="0.1" />
        </link>
        <joint name="${prefix}_joint" type="revolute">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <limit upper="0" lower="0" effort="1" velocity="5.0" />
        </joint>
    </xacro:macro>
    <xacro:caster prefix="fcaster" position="0.135 0 0" />
    <xacro:caster prefix="lcaster" position="-0.135 0.105 0" />
    <!--<xacro:caster prefix="rcaster" position="-0.135 -0.105 0" />-->
    <!--************* ROBOT'S LASER **************-->
    <link name="base_scan">
        <visual>
            <geometry>
                <cylinder radius="0.02" length="0.04" />
            </geometry>
            <origin xyz="0 0 0.0" rpy="0 0 0" />
            <material name="black">
                <color rgba="0 0 0 1" />
            </material>
        </visual>
    </link>
    <joint name="base_to_scanner" type="fixed">
        <parent link="base_link" />
        <child link="base_scan" />
        <origin xyz="0.165 0 0.24" rpy="0 0 0" />
    </joint>
    <!--************* ROBOT'S CAMERA **************-->
    <link name="camera_link">
        <visual>
            <geometry>
                <mesh filename="file:///home/jpalves/ros2_ws/src/robot1/models/amr/meshes/d435.dae" />
            </geometry>
            <origin rpy="1.57 0 1.57" xyz="0 0 0" />
            <material name="black">
                <color rgba="0 0 0 1" />
            </material>
        </visual>
    </link>
    
    <joint name="camera_joint" type="fixed">
        <parent link="base_link" />
        <child link="camera_link" />
        <origin rpy="0 0 0" xyz="0.23 0 0.15" />
    </joint>
    
    <joint name="camera_rgb_joint" type="fixed">
    	<origin xyz="0.00 0.0 0.0" rpy="0 0 0"/>
    	<!-- <origin xyz="${r200_cam_rgb_px} ${r200_cam_rgb_py} ${r200_cam_rgb_pz}" rpy="0 0 0"/> -->
    	<parent link="camera_link"/>
    	<child link="camera_rgb_frame"/>
    </joint>
    
    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
         <origin xyz="0 0 0" rpy="-1.57 0 -1.57"/>
         <parent link="camera_rgb_frame"/>
         <child link="camera_rgb_optical_frame"/>
   </joint>
  
  <link name="camera_rgb_optical_frame"/>
    
  <link name="imu_link" />
  <joint name="imu_joint" type="fixed">
        <parent link="camera_link" />
        <child link="imu_link" />
        <origin rpy="0 0 0" xyz="0 0 0" />
  </joint>
  
  <link name="camera_depth_frame"></link>

  <link name="camera_depth_optical_frame"></link>
  
  <joint name="camera_depth_joint" type="fixed">
    <parent link="camera_link" />
    <child link="camera_depth_frame" />
    <pose xyz="0 0 0" rpy="0 0 0" />
  </joint>


  <joint name="camera_depth_optical_joint" type="fixed">
    <parent link="camera_depth_frame" />
    <child link="camera_depth_optical_frame" />
    <pose xyz="0 0 0 " rpy="-1.57 0 -1.57" />
  </joint>
  
  <!-- *********************** WHEEL ODOMETRY ***************************    -->
  <gazebo>
    <plugin name="amr_diff_drive" filename="amr_diff_drive.so">

      <update_rate>30</update_rate>
     
      <!-- wheels -->
      <left_joint>lwheel_joint</left_joint>
      <right_joint>rwheel_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.365</wheel_separation>
      <wheel_diameter>0.165</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>200</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>

      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->   
      <publish_odom_tf>false</publish_odom_tf>
    
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->   
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_topic>odometry</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

      <odometry_source>1</odometry_source>
      <!--<ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>-->
    </plugin>
  </gazebo>
</robot>
